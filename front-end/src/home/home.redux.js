import Container from "typedi";

import CartService from "./cart.service";

export default class CartRedux {
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////   STATES & CONSTANTS    /////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  initialState = {
    fetchError: false,
    fetchLoading: false,
    items: []
  };

  actions = {
    FETCH_ERROR: "FETCH_ERROR",
    FETCH_LOADING: "FETCH_LOADING",
    FETCH_SUCCESS: "FETCH_SUCCESS"
  };

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////   ACTIONS     ///////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  fetchHasErrored = bool => {
    return {
      type: this.actions.FETCH_ERROR,
      fetchError: bool
    };
  };

  fetchIsLoading = bool => {
    return {
      type: this.actions.FETCH_LOADING,
      fetchLoading: bool
    };
  };

  fetchSucceeded = payload => {
    return {
      type: this.actions.FETCH_SUCCESS,
      items: payload
    };
  };

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////   REDUCERS    ///////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  // get wishlist of customer

  fetchErrorReducer = (state = this.initialState.fetchError, action) => {
    if (action.type === this.actions.FETCH_ERROR) {
      return action.fetchError;
    }
    return state;
  };

  fetchLoadingReducer = (state = this.initialState.fetchLoading, action) => {
    if (action.type === this.actions.FETCH_LOADING) {
      return action.fetchLoading;
    }
    return state;
  };

  getWishlistSuccessReducer = (state = this.initialState.items, action) => {
    if (action.type === this.actions.FETCH_SUCCESS) {
      return action.items;
    }
    return state;
  };

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////   METHODS    ////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  fetchItems = () => {
    return async dispatch => {
      try {
        dispatch(this.fetchIsLoading(true));
        const service = Container.get();
        const item = await service.getWishlist();
        dispatch(this.getWishlistSucceeded(wishlist));
        dispatch(this.fetchIsLoading(false));
      } catch (err) {
        console.log(err);
        dispatch(this.getWishlistHasErrored(true));
      }
    };
  };
}
